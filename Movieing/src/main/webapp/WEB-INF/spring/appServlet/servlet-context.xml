<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
   xmlns="http://www.springframework.org/schema/mvc"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:beans="http://www.springframework.org/schema/beans"
   xmlns:context="http://www.springframework.org/schema/context"
   xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

   <!-- 지윤 : 타일즈 -->
   <!-- tiles사용을 위한 bean등록 -->
   <beans:bean
      class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
      <beans:property name="definitions">
         <beans:list>
            <beans:value>/WEB-INF/views/templates/layouts.xml</beans:value>
         </beans:list>

      </beans:property>
   </beans:bean>
   <!-- tiles를 처리하도록 또 다른 뷰리졸버 등록 -->
   <beans:bean
      class="org.springframework.web.servlet.view.UrlBasedViewResolver">
      <beans:property name="order" value="1" />
      <beans:property name="viewClass"
         value="org.springframework.web.servlet.view.tiles3.TilesView" />

   </beans:bean>

   <!-- DispatcherServlet Context: defines this servlet's request-processing 
      infrastructure -->

   <!-- Enables the Spring MVC @Controller programming model -->
   <annotation-driven />

   <!-- Handles HTTP GET requests for /resources/** by efficiently serving 
      up static resources in the ${webappRoot}/resources directory -->
   <resources mapping="/resources/**" location="/resources/" />

   <!-- Resolves views selected for rendering by @Controllers to .jsp resources 
      in the /WEB-INF/views directory -->
   <beans:bean
      class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <beans:property name="prefix" value="/WEB-INF/views/" />
      <beans:property name="suffix" value=".jsp" />
      <beans:property name="order" value="2" />
   </beans:bean>


<annotation-driven/>

   <context:component-scan
      base-package="com.kosmo.movieing" />

   <!-- NaverLoginBO Class에 대한 Bean설정 추가 -->
   <beans:bean id="naverLoginBO"
      class="com.kosmo.movieing.web.NaverLoginBO" />

   <!-- google Class Bean설정 추가 -->
   <!-- 클라이언트ID와 보안비밀 세팅 -->
   <beans:bean id="googleConnectionFactory"
      class="org.springframework.social.google.connect.GoogleConnectionFactory">
      <beans:constructor-arg
         value="39236105074-b52uaeq079dn5uovhl9u9fr2m47ka1jr.apps.googleusercontent.com" />
      <beans:constructor-arg
         value="WCA3LIgtBRZEP33H7IfWFoH-" />
   </beans:bean>
   <!-- 승인된 자바스크립트 원본과 승인된 리디렉션 URI -->
   <beans:bean id="googleOAuth2Parameters"
      class="org.springframework.social.oauth2.OAuth2Parameters">
      <beans:property name="scope"
         value="https://www.googleapis.com/auth/plus.login"/>
      <beans:property name="redirectUri"
         value="http://localhost:8080/Movieing/oauth2callback" />
   </beans:bean>


	


</beans:beans>